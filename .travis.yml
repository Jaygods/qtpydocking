language: python
dist: xenial
sudo: false

services:
  - xvfb

addons:
    apt:
      packages:
        - herbstluftwm
        - libxkbcommon-x11-0
        - qt5-default

env: 
  global:
    - OFFICIAL_REPO="klauer/qtpydocking"
    # Doctr deploy key for klauer/qtpydocking
    - secure: "qqYfoPOJWnlAEhLfXUiQqHxMFTuo4WibiTy1HiBpyImkhyLXeb7nP0bHn1AzhXcnYAYV7p8IjsIqyqkeklgGqufNfmwrz9kPoN1IZW53GxPYoVcThGpWOEeUavXsNUlT+ixHV245Y2DTFQ3B+44uH9SHW6r5EdGGYXTmqo6TZfLGlKcexeqEyhuaFww0b93THHxIyGdyhJ1SdmOOLHzswSrW/aUR8JbZhYl/j23Ou+g1uFIwv5iVx2pnWJibIyD80oQONMNqO+0gP4EfAy9XMMSABllojidK4So1oyyeLjUcNPyDSzvnrQVyEaptwc//eS55MFxn21oL4pUSH1cXprJpZAJUOMZzsNIGJNcIl+iG29ISha41Vn9bJy18lZqpeNe5jNKqNVO9tL3Vh2jplOK2E0tqa4HJx9n9aVizBh1j1M/RvH0XHaLqaQ+eg1Nl0owqG9nhPRCkV43LLnH3o8mmoqSQ+Qn2NgtAIqx1DjyUe/3PVhFZClnyFfXFgO8o+NYSsfyAr99H89tCh/l6Sry9Awk1VOy+HGgMtq/BAfTNB7gR97s0mNTnYetgYymdJncnI3f7I09IT448hHEX+dpRfNeRBtx9U1aErTEGgZexCTI2Lf1D88vRkoBaHr0NFTnKYHap9vOUsLb8O7j0VpdaKZfhjXg9HLw62E82fb0="

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853

matrix:
  fast_finish: true
  include:
    - python: 3.6
      env:
        - CONDA_UPLOAD=1
        - BUILD_DOCS=1
        - QT_API=pyqt5
    - python: 3.7
      env:
        - QT_API=pyqt5
    - python: 3.6
      env:
        - QT_API=PySide2
    - python: 3.7
      env:
        - QT_API=PySide2
  allow_failures:
  - python: 3.6
    env:
      - QT_API=PySide2
  - python: 3.7
    env:
      - QT_API=PySide2


install:
  # Install and configure miniconda
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no

  # Ensure all packages are up-to-date
  - conda update -q conda
  - conda install conda-build anaconda-client
  - conda config --append channels conda-forge
  - conda info -a

  # Build the conda recipe for this package
  - conda build -q conda-recipe --python=$TRAVIS_PYTHON_VERSION --output-folder bld-dir
  - conda config --add channels "file://`pwd`/bld-dir"

  # Create the test environment
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION qtpydocking --file requirements.txt
  - source deactivate
  - source activate test-environment

  # Install additional development requirements
  - pip install -Ur dev-requirements.txt

  # Install the package
  - pip install -e .

  # Install the specific binding we're testing against
  - pip install "${QT_API}"


before_script:
  # Run the window manager
  - "herbstluftwm &"
  - sleep 1


script:
  - flake8 qtpydocking
  - export PYTEST_QT_API="${QT_API}"
  - coverage run run_tests.py
  - set -e
  
  - |
    if [[ "$BUILD_DOCS" == "1" ]]; then
      # Create HTML documentation  
      pushd docs
      make html
      popd
      #Publish docs.
      doctr deploy . --built-docs docs/build/html --deploy-branch-name gh-pages --command "touch .nojekyll; git add .nojekyll"
    fi
   

after_success:
  - coverage report -m
  - codecov

  - |
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == $OFFICIAL_REPO && "$CONDA_UPLOAD" == "1" ]]; then
      if [[ $TRAVIS_BRANCH == $TRAVIS_TAG  && $TRAVIS_TAG != '' ]]; then
        export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN_TAG
        anaconda upload bld-dir/linux-64/*.tar.bz2
      fi
    fi
